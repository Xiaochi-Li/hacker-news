{"version":3,"sources":["components/shared/IconText.js","utils/getColor.js","components/shared/TagGroup.js","components/shared/NewsItem.js","constance/searchConstance.js","context/ResultsContext.js","utils/getSearchUrl.js","components/search/ResultsList.js","components/search/SearchBar.js","pages/SearchResultPage.js","App.js","index.js"],"names":["IconText","icon","text","React","createElement","getColor","index","Colors","TagGroup","tags","map","tag","color","NewsItem","title","description","points","num_comments","url","story_text","_tags","Item","actions","StarTwoTone","MessageTwoTone","Meta","href","rel","target","Paragraph","ellipsis","rows","expandable","symbol","htmlToText","RESPONSE_COMPLETE","ERROR","UPDATE_KEYWORDS","UPDATE_PAGE","ResultsContext","createContext","initialState","searchKeywords","hits","loading","error","page","hitsTotal","fetchReducer","state","action","type","payload","ResultsProvider","children","useReducer","dispatch","useEffect","fetch","input","pageQuery","queryInput","queryTage","getSearchUrl","then","response","json","hitsPerPage","nbPages","catch","updateSearchKeywords","useCallback","updatePage","value","Provider","ResultsList","useContext","paginationConfig","pageSize","position","total","onChange","itemLayout","size","pagination","dataSource","renderItem","item","SearchBar","Search","placeholder","onSearch","enterButton","contentStyles","padding","SearchResultPage","Header","Layout","Footer","Content","style","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.310154e1.chunk.js","sourcesContent":["import React from 'react';\nimport { Space } from 'antd';\n\nconst IconText = ({ icon, text }) => (\n  <Space>\n    {React.createElement(icon)}\n    {text}\n  </Space>\n);\n\nexport default IconText;\n","export const getColor = (index) => {\n  const Colors = [\n    'magenta',\n    'red',\n    'orange',\n    'gold',\n    'lime',\n    'green',\n    'cyan',\n    'blue',\n    'volcano',\n  ];\n  if (index < 10) return Colors[index];\n  return Colors[index % 10];\n};\n","import React from 'react';\nimport { getColor } from '../../utils/getColor';\nimport { Tag } from 'antd';\n\nconst TagGroup = ({ tags }) => {\n  return (\n    <div>\n      {tags.map((tag, index) => (\n        <Tag color={getColor(index)} key={tag}>\n          {tag}\n        </Tag>\n      ))}\n    </div>\n  );\n};\n\nexport default TagGroup;\n","import React from 'react';\nimport IconText from './IconText';\nimport TagGroup from './TagGroup';\nimport { List, Typography } from 'antd';\nimport { StarTwoTone, MessageTwoTone } from '@ant-design/icons';\nimport { htmlToText } from 'html-to-text';\n\nconst NewsItem = ({\n  title,\n  description,\n  points,\n  num_comments,\n  url,\n  story_text,\n  _tags,\n}) => {\n  return (\n    <List.Item\n      key={title}\n      actions={[\n        <IconText text={points} icon={StarTwoTone} key=\"star-two-tone-icon\" />,\n        <IconText\n          text={num_comments}\n          icon={MessageTwoTone}\n          key=\"message-two-tone-icon\"\n        />,\n        <TagGroup tags={_tags} key=\"tag-group\" />,\n      ]}\n    >\n      <List.Item.Meta\n        title={\n          <a href={url} rel=\"noreferrer\" target=\"_blank\">\n            {title}\n          </a>\n        }\n        description={description}\n      />\n      <Typography.Paragraph\n        ellipsis={{ rows: 3, expandable: true, symbol: 'more' }}\n      >\n        {htmlToText(story_text)}\n      </Typography.Paragraph>\n    </List.Item>\n  );\n};\n\nexport default NewsItem;\n","export const tags = {\n  story: 'story',\n  comment: 'comment',\n  poll: 'poll',\n};\n","import React, {\n  useEffect,\n  useReducer,\n  createContext,\n  useCallback,\n} from 'react';\nimport { getSearchUrl } from '../utils/getSearchUrl';\nimport { tags } from '../constance/searchConstance';\n\n// TODO create action creators\nexport const LOADING = 'LOADING';\nexport const RESPONSE_COMPLETE = 'RESPONSE_COMPLETE';\nexport const ERROR = 'ERROR';\nexport const UPDATE_KEYWORDS = 'UPDAT_KEYWORDS';\nexport const UPDATE_PAGE = 'UPDATE_PAGE';\n\nexport const ResultsContext = createContext();\n\nconst initialState = {\n  searchKeywords: '',\n  hits: [],\n  loading: true,\n  error: null,\n  page: 1,\n  hitsTotal: 1000,\n};\n\nexport const fetchReducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOADING:\n      return {\n        ...state,\n        hits: null,\n        loading: true,\n        error: null,\n      };\n    case RESPONSE_COMPLETE:\n      return {\n        ...state,\n        ...payload,\n        loading: true,\n        error: null,\n      };\n    case ERROR:\n      return {\n        ...state,\n        hits: null,\n        loading: false,\n        error: payload.error,\n      };\n    case UPDATE_KEYWORDS:\n      return {\n        ...state,\n        searchKeywords: payload.searchKeywords,\n      };\n    case UPDATE_PAGE:\n      return {\n        ...state,\n        page: payload.page,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport const ResultsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n  const { searchKeywords, page } = state;\n\n  useEffect(() => {\n    fetch(getSearchUrl(searchKeywords, page, tags.story))\n      .then((response) => response.json())\n      .then((response) => {\n        const { hits, hitsPerPage, nbPages } = response;\n        dispatch({\n          type: RESPONSE_COMPLETE,\n          payload: { hits, hitsTotal: hitsPerPage * nbPages },\n        });\n      })\n      .catch((error) => {\n        dispatch({ type: ERROR, payload: { error } });\n      });\n  }, [searchKeywords, page]);\n\n  const updateSearchKeywords = useCallback(\n    (searchKeywords) => {\n      dispatch({ type: UPDATE_KEYWORDS, payload: { searchKeywords } });\n    },\n    [dispatch]\n  );\n\n  const updatePage = useCallback(\n    (page) => {\n      dispatch({\n        type: UPDATE_PAGE,\n        payload: { page: page },\n      });\n    },\n    [dispatch]\n  );\n\n  const value = { ...state, updateSearchKeywords, updatePage };\n  return (\n    <ResultsContext.Provider value={value}>{children}</ResultsContext.Provider>\n  );\n};\n","export const BASE_URL = 'https://hn.algolia.com/api/v1/';\nexport const SEARCH_ENDPOINT = 'search';\n\nexport const getSearchUrl = (input, page, tags) => {\n  const pageQuery = page ? `page=${page - 1}` : '';\n  const queryInput = input ? input : '';\n  const queryTage = tags ? `tags=${tags}` : '';\n  return `${BASE_URL}${SEARCH_ENDPOINT}?query=${queryInput}&${queryTage}&${pageQuery}`;\n};\n","import React from 'react';\nimport NewsItem from '../shared/NewsItem';\nimport { List } from 'antd';\nimport { ResultsContext } from '../../context/ResultsContext';\n\nconst ResultsList = () => {\n  const { hits, hitsTotal, updatePage } = React.useContext(ResultsContext);\n  const paginationConfig = {\n    pageSize: 20,\n    position: 'both',\n    total: hitsTotal,\n    onChange: (page) => {\n      updatePage(page);\n    },\n  };\n  return (\n    <List\n      itemLayout=\"vertical\"\n      size=\"large\"\n      pagination={paginationConfig}\n      dataSource={hits}\n      renderItem={(item) => <NewsItem {...item} />}\n    />\n  );\n};\n\nexport default ResultsList;\n","import React from 'react';\nimport { Input } from 'antd';\nimport { ResultsContext } from '../../context/ResultsContext';\n\nconst SearchBar = () => {\n  const { updateSearchKeywords } = React.useContext(ResultsContext);\n  return (\n    <Input.Search\n      placeholder=\"input search text\"\n      size=\"large\"\n      onSearch={(text) => {\n        updateSearchKeywords(text);\n      }}\n      enterButton\n    />\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport ResultsList from '../components/search/ResultsList';\nimport SearchBar from '../components/search/SearchBar';\nimport { Layout } from 'antd';\n\nconst contentStyles = { padding: '0 10%' };\n\nconst SearchResultPage = () => {\n  const { Header, Footer, Content } = Layout;\n  return (\n    <Layout>\n      <Header>\n        <SearchBar />\n      </Header>\n      <Content style={contentStyles}>\n        <ResultsList />\n      </Content>\n      <Footer>Footer</Footer>\n    </Layout>\n  );\n};\n\nexport default SearchResultPage;\n","import React from 'react';\nimport 'antd/dist/antd.css';\n\nimport SearchResultPage from './pages/SearchResultPage';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <SearchResultPage />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ResultsProvider } from './context/ResultsContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ResultsProvider>\n      <App />\n    </ResultsProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}